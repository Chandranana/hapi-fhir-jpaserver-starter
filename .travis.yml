# Use docker-based build environment (instead of openvz)
#sudo: false
#dist: trusty

# Use VM based build environment
sudo: required
dist: focal

language: java
jdk:
    - openjdk17
   #- oraclejdk9
arch:  
  - ppc64le
  
branches:
  only:
    - master
env:
  global:
    - MAVEN_OPTS="-Xmx10244M -Xss128M -XX:MetaspaceSize=512M -XX:MaxMetaspaceSize=1024M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC"

cache:
  directories:
      - '$HOME/.m2/repository'

install: /bin/true

before_script:
# This seems to be required to get travis to set Xmx4g, per https://github.com/travis-ci/travis-ci/issues/3893
  - export MAVEN_SKIP_RC=true
# Sometimes things get restored from the cache with bad permissions. See https://github.com/travis-ci/travis-ci/issues/9630
  - sudo chmod -R 777 "$HOME/.m2/repository";
  - sudo chown -R travis:travis "$HOME/.m2/repository";
  - curl -LSsO https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.17.0/opentelemetry-javaagent.jar 
  - chmod +x scripts/install_tomcat.sh
  #- bash scripts/install_tomcat.sh
  #- cp catalina.properties  /home/travis/tomcat/conf/catalina.properties 
  #- cp server.xml /home/travis/tomcat/conf/server.xml
  
script:
  - echo $TRAVIS_BUILD_DIR
  - cd $TRAVIS_BUILD_DIR
  #- mvn -ntp dependency:go-offline 
  - mvn clean install -DskipTests -Djdk.lang.Process.launchMechanism=vfork
  - mvn package spring-boot:repackage -Pboot
  - mkdir -p /usr/local/hapi/data/hapi/lucenefiles
  - chmod 775 /usr/local/hapi/data/hapi/lucenefiles
  - cp target/ROOT.war /usr/local/tomcat/webapps/ROOT.war
  - java --class-path "target/ROOT.war" "-Dloader.path=main.war!/WEB-INF/classes/,main.war!/WEB-INF/,/app/extra-classes" "org.springframework.boot.loader.PropertiesLauncher", "target/main.war"




